const Web3 = require('web3');
const contractAbi = [
	{
		"inputs": [],
		"name": "get",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "nome",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "valor",
				"type": "uint256"
			}
		],
		"name": "sacar",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "saldoContaCorrente",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

const ganacheHost = 'HTTP://127.0.0.1:7545';
const ganacheAccount = '0x5a3947bd18c55e72999a71ec88bf0c5c4cd7cc2ce214cd921a0f9050b0c03880';
const ganacheGasPrice = '20000000000';
const ganacheGasLimit = '3000000';

const nome = 'Solana';
const saldo = 1000;

async function deployContract() {
  try {
    const web3 = new Web3(ganacheHost);

    const accounts = await web3.eth.getAccounts();
    const deployer = accounts[0]; 

    const contract = new web3.eth.Contract(contractAbi);

    const gasEstimate = await contract.deploy({
      data: '0x' + '608060405234801561001057600080fd5b5061046f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632deb124b146100515780636d4ce63c1461006f5780637371b0d61461008d578063934b8054146100a9575b600080fd5b6100596100c7565b6040516100669190610256565b60405180910390f35b610077610155565b6040516100849190610291565b60405180910390f35b6100a760048036038101906100a291906102dd565b61015f565b005b6100b16101c0565b6040516100be9190610291565b60405180910390f35b600080546100d490610339565b80601f016020809104026020016040519081016040528092919081815260200182805461010090610339565b801561014d5780601f106101225761010080835404028352916020019161014d565b820191906000526020600020905b81548152906001019060200180831161013057829003601f168201915b505050505081565b6000600154905090565b6001548111156101a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019b906103b6565b60405180910390fd5b80600160008282546101b69190610405565b9250508190555050565b60015481565b600081519050919050565b600082825260208201905092915050565b60005b838110156102005780820151818401526020810190506101e5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610228826101c6565b61023281856101d1565b93506102428185602086016101e2565b61024b8161020c565b840191505092915050565b60006020820190508181036000830152610270818461021d565b905092915050565b6000819050919050565b61028b81610278565b82525050565b60006020820190506102a66000830184610282565b92915050565b600080fd5b6102ba81610278565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b6000602082840312156102f3576102f26102ac565b5b6000610301848285016102c8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061035157607f821691505b6020821081036103645761036361030a565b5b50919050565b7f53616c646f20696e737566696369656e74650000000000000000000000000000600082015250565b60006103a06012836101d1565b91506103ab8261036a565b602082019050919050565b600060208201905081810360008301526103cf81610393565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061041082610278565b915061041b83610278565b9250828203905081811115610433576104326103d6565b5b9291505056fea2646970667358221220b45123c3d9f0989a0d7416b4d28832024713d6c7b549c6e6cb54bb7fd20269ff64736f6c63430008120033',
      arguments: [nome, saldo]
    }).estimateGas();

    const deployedContract = await contract.deploy({
      data: '0x' + '608060405234801561001057600080fd5b5061046f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632deb124b146100515780636d4ce63c1461006f5780637371b0d61461008d578063934b8054146100a9575b600080fd5b6100596100c7565b6040516100669190610256565b60405180910390f35b610077610155565b6040516100849190610291565b60405180910390f35b6100a760048036038101906100a291906102dd565b61015f565b005b6100b16101c0565b6040516100be9190610291565b60405180910390f35b600080546100d490610339565b80601f016020809104026020016040519081016040528092919081815260200182805461010090610339565b801561014d5780601f106101225761010080835404028352916020019161014d565b820191906000526020600020905b81548152906001019060200180831161013057829003601f168201915b505050505081565b6000600154905090565b6001548111156101a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019b906103b6565b60405180910390fd5b80600160008282546101b69190610405565b9250508190555050565b60015481565b600081519050919050565b600082825260208201905092915050565b60005b838110156102005780820151818401526020810190506101e5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610228826101c6565b61023281856101d1565b93506102428185602086016101e2565b61024b8161020c565b840191505092915050565b60006020820190508181036000830152610270818461021d565b905092915050565b6000819050919050565b61028b81610278565b82525050565b60006020820190506102a66000830184610282565b92915050565b600080fd5b6102ba81610278565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b6000602082840312156102f3576102f26102ac565b5b6000610301848285016102c8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061035157607f821691505b6020821081036103645761036361030a565b5b50919050565b7f53616c646f20696e737566696369656e74650000000000000000000000000000600082015250565b60006103a06012836101d1565b91506103ab8261036a565b602082019050919050565b600060208201905081810360008301526103cf81610393565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061041082610278565b915061041b83610278565b9250828203905081811115610433576104326103d6565b5b9291505056fea2646970667358221220b45123c3d9f0989a0d7416b4d28832024713d6c7b549c6e6cb54bb7fd20269ff64736f6c63430008120033',
      arguments: [nome, saldo]
    }).send({
      from: deployer,
      gas: gasEstimate,
      gasPrice: ganacheGasPrice,
      gasLimit: ganacheGasLimit
    });

    console.log('Contrato implantado em:', deployedContract.options.address);
  } catch (error) {
    console.error('Erro durante a implantação do contrato:', error);
  }
}

deployContract();
